package com.hiroshi.cimoc.model;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.hiroshi.cimoc.model.Comic;
import com.hiroshi.cimoc.model.Source;
import com.hiroshi.cimoc.model.Tag;
import com.hiroshi.cimoc.model.TagRef;
import com.hiroshi.cimoc.model.Task;

import com.hiroshi.cimoc.model.ComicDao;
import com.hiroshi.cimoc.model.SourceDao;
import com.hiroshi.cimoc.model.TagDao;
import com.hiroshi.cimoc.model.TagRefDao;
import com.hiroshi.cimoc.model.TaskDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig comicDaoConfig;
    private final DaoConfig sourceDaoConfig;
    private final DaoConfig tagDaoConfig;
    private final DaoConfig tagRefDaoConfig;
    private final DaoConfig taskDaoConfig;

    private final ComicDao comicDao;
    private final SourceDao sourceDao;
    private final TagDao tagDao;
    private final TagRefDao tagRefDao;
    private final TaskDao taskDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        comicDaoConfig = daoConfigMap.get(ComicDao.class).clone();
        comicDaoConfig.initIdentityScope(type);

        sourceDaoConfig = daoConfigMap.get(SourceDao.class).clone();
        sourceDaoConfig.initIdentityScope(type);

        tagDaoConfig = daoConfigMap.get(TagDao.class).clone();
        tagDaoConfig.initIdentityScope(type);

        tagRefDaoConfig = daoConfigMap.get(TagRefDao.class).clone();
        tagRefDaoConfig.initIdentityScope(type);

        taskDaoConfig = daoConfigMap.get(TaskDao.class).clone();
        taskDaoConfig.initIdentityScope(type);

        comicDao = new ComicDao(comicDaoConfig, this);
        sourceDao = new SourceDao(sourceDaoConfig, this);
        tagDao = new TagDao(tagDaoConfig, this);
        tagRefDao = new TagRefDao(tagRefDaoConfig, this);
        taskDao = new TaskDao(taskDaoConfig, this);

        registerDao(Comic.class, comicDao);
        registerDao(Source.class, sourceDao);
        registerDao(Tag.class, tagDao);
        registerDao(TagRef.class, tagRefDao);
        registerDao(Task.class, taskDao);
    }
    
    public void clear() {
        comicDaoConfig.clearIdentityScope();
        sourceDaoConfig.clearIdentityScope();
        tagDaoConfig.clearIdentityScope();
        tagRefDaoConfig.clearIdentityScope();
        taskDaoConfig.clearIdentityScope();
    }

    public ComicDao getComicDao() {
        return comicDao;
    }

    public SourceDao getSourceDao() {
        return sourceDao;
    }

    public TagDao getTagDao() {
        return tagDao;
    }

    public TagRefDao getTagRefDao() {
        return tagRefDao;
    }

    public TaskDao getTaskDao() {
        return taskDao;
    }

}
